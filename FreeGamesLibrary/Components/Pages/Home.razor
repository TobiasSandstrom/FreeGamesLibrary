@page "/"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IDispatcher dispatcher
@inject IState<UiState> UiState
@inject NavigationManager NavigationManager
@using FreeGamesLibrary.Components.Layout
@using FreeGamesLibrary.Components
@using FreeGamesLibrary.Store.UiUseState

<PageTitle>Home</PageTitle>

<div class="home-banner">
    <MudContainer Class="home-banner-inner-container">

        <MudContainer Class="home-banner-text-container">
            <MudText Color="Color.Secondary" Typo="Typo.h2"><b>Free Games Library</b></MudText>
            <MudText class="mt-4" Color="Color.Secondary" Typo="Typo.body1">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</MudText>
            <MudContainer Class="d-flex justify-end">
                <MudButton class="mt-4 px-4 py-2" OnClick='() => NavigateTo("/library")' Variant="Variant.Filled" Color="Color.Secondary">
                    <MudText Color="Color.Primary"Typo="Typo.body1">Browse Library</MudText>
                </MudButton>
            </MudContainer>
        </MudContainer>

    </MudContainer>


</div>


<FeaturedGames />

<MudContainer Class="d-flex justify-center items-center text-center">
    <MudButton Class="mr-2" Variant="Variant.Filled" Color="Color.Tertiary" OnClick="@GenerateClick">Generate new featured</MudButton>
    <MudButton Class="ml-2" Variant="Variant.Filled" Color="Color.Tertiary" OnClick='() => NavigateTo("/library")'>Library</MudButton>
</MudContainer>

<ShowCase />


<div style="height:25vh;">


</div>

@code{
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (UiState.Value.GamesSimple.Count <= 0)
        {
            dispatcher.Dispatch(new GetGamesSimpleListAction());
        }
        else if (UiState.Value.FeaturedGamesSimple.Count <= 0)
        {
            dispatcher.Dispatch(new SetFeaturedGamesAction(UiState.Value.GamesSimple.ToList()));

       }
    }

    private void NavigateTo(string url)
    {
        NavigationManager.NavigateTo(url);
    }    

    private void GenerateClick()
    {
        dispatcher.Dispatch(new SetFeaturedGamesAction(UiState.Value.GamesSimple));
    }
}